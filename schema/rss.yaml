# Copyright 2025 Joshua Rich <joshua.rich@gmail.com>.
# SPDX-License-Identifier: 	AGPL-3.0-or-later
openapi: '3.0.3'
info:
  version: 1.0.0
  title: RSS 2.0
  description: >
    RSS 2.0 OpenAPI schema.

    https://www.rssboard.org/rss-specification
  license:
    name: AGPL-3.0-or-later
    url: https://spdx.org/licenses/AGPL-3.0-only.html
components:
  schemas:
    PubDate:
      description: >
        is the publication date of the content.
      x-go-type: types.DateTime
      x-oapi-codegen-extra-tags:
        xml: 'pubDate,omitempty'
        validate: 'omitempty'
      x-go-type-skip-optional-pointer: false
    LastBuildDate:
      description: >
        is the last time the content of the channel changed.
      x-go-type: types.DateTime
      x-oapi-codegen-extra-tags:
        xml: 'lastBuildDate,omitempty'
        validate: 'omitempty'
      x-go-type-skip-optional-pointer: false
    Category:
      description: >
        allows a taxonomy to be set on the channel or item.
      type: object
      required:
        - value
      properties:
        value:
          $ref: 'types.yaml#/components/schemas/CharData'
        domain:
          description: >
            is a string that identifies a categorization taxonomy.
          type: string
          xml:
            attribute: true
          x-oapi-codegen-extra-tags:
            xml: 'domain,attr,omitempty'
      x-oapi-codegen-extra-tags:
        xml: 'category,omitempty'
    Cloud:
      description: >
        specifies a web service that supports the rssCloud interface which can be implemented in HTTP-POST, XML-RPC or
        SOAP 1.1.

        Its purpose is to allow processes to register with a cloud to be notified of updates to the channel,
        implementing a lightweight publish-subscribe protocol for RSS feeds.
      type: object
      required:
        - domain
        - port
        - path
        - registerProcedure
        - protocol
      properties:
        domain:
          type: string
          xml:
            attribute: true
          x-oapi-codegen-extra-tags:
            xml: 'domain,attr'
            validate: 'required'
        port:
          type: integer
          xml:
            attribute: true
          x-oapi-codegen-extra-tags:
            xml: 'port,attr'
            validate: 'required'
        path:
          type: string
          xml:
            attribute: true
          x-oapi-codegen-extra-tags:
            xml: 'path,attr'
            validate: 'required'
        registerProcedure:
          type: string
          xml:
            attribute: true
          x-oapi-codegen-extra-tags:
            xml: 'registerProcedure,attr'
            validate: 'required'
        protocol:
          type: string
          enum: ['xml-rpc', 'soap', 'http-post']
          xml:
            attribute: true
          x-oapi-codegen-extra-tags:
            xml: 'protocol,attr'
            validate: 'required'
      x-oapi-codegen-extra-tags:
        xml: 'cloud,omitempty'
      example:
        domain: rpc.sys.com
        port: 80
        path: '/RPC2'
        registerProcedure: 'pingMe'
        protocol: 'soap'
      x-go-type-skip-optional-pointer: false
    TTL:
      description: >
        stands for time to live. It's a number of minutes that indicates how long a channel can be cached before
        refreshing from the source.
      type: integer
      minimum: 1
      x-go-name: TTL
      x-oapi-codegen-extra-tags:
        xml: 'ttl,omitempty'
        validate: 'omitempty,gte=1'
    Image:
      description: >
        contains details of a GIF, JPEG or PNG image that can be displayed with the channel.
      type: object
      required:
        - url
        - title
        - link
      properties:
        url:
          description: >
            is the URL of a GIF, JPEG or PNG image that represents the channel.
          type: string
          x-go-name: URL
          x-oapi-codegen-extra-tags:
            xml: 'url'
            validate: 'required_without=link,omitempty,url'
        title:
          description: >
            describes the image, it's used in the ALT attribute of the HTML <img> tag when the channel is rendered in
            HTML.
          type: string
          x-oapi-codegen-extra-tags:
            xml: 'title'
            validate: 'required'
        link:
          description: >
            is the URL of the site, when the channel is rendered, the image is a link to the site. (Note, in practice
            the image <title> and <link> should have the same value as the channel's <title> and <link>.
          type: string
          x-oapi-codegen-extra-tags:
            xml: 'link'
            validate: 'required_without=URL,omitempty,url'
        width:
          description: >
            indicates the width of the image in pixels.
          type: integer
          maximum: 144
          default: 88
          x-oapi-codegen-extra-tags:
            xml: 'width,omitempty'
            validate: 'omitempty,gt=0,lte=144'
        height:
          description: >
            indicates the height of the image in pixels.
          type: integer
          maximum: 400
          default: 31
          x-oapi-codegen-extra-tags:
            xml: 'height,omitempty'
            validate: 'omitempty,gt=0,lte=400'
        description:
          description: >
            contains text that is included in the TITLE attribute of the link formed around the image in the HTML
            rendering.
          type: string
          x-oapi-codegen-extra-tags:
            xml: 'description,omitempty'
      x-oapi-codegen-extra-tags:
        xml: 'image,omitempty'
      x-go-type-skip-optional-pointer: false
    Rating:
      description: >
        contains a rating for the element.
      x-go-type: 'types.StringData'
      x-oapi-codegen-extra-tags:
        xml: 'rating,omitempty'
    TextInput:
      description: >
        The purpose of the <textInput> element is something of a mystery. You can use it to specify a search engine box.
        Or to allow a reader to provide feedback. Most aggregators ignore it.
      type: object
      required:
        - title
        - description
        - name
        - link
      properties:
        title:
          description: >
            is the label of the Submit button in the text input area.
          type: string
          x-oapi-codegen-extra-tags:
            xml: 'title'
            validate: 'required'
        description:
          description: >
            explains the text input area.
          type: string
          x-oapi-codegen-extra-tags:
            xml: 'description'
            validate: 'required'
        name:
          description: >
            is the name of the text object in the text input area.
          type: string
          x-oapi-codegen-extra-tags:
            xml: 'name'
            validate: 'required'
        link:
          description: >
            is the URL of the CGI script that processes text input requests.
          type: string
          x-oapi-codegen-extra-tags:
            xml: 'link'
            validate: 'required,uri'
      x-oapi-codegen-extra-tags:
        xml: 'textInput,omitempty'
      x-go-type-skip-optional-pointer: false
    Author:
      description: >
        is the email address of the author of the item. For newspapers and magazines syndicating via RSS, the
        author is the person who wrote the article that the <item> describes. For collaborative weblogs, the author
        of the item might be different from the managing editor or webmaster. For a weblog authored by a single
        individual it would make sense to omit the <author> element.
      x-go-type: 'types.StringData'
      x-oapi-codegen-extra-tags:
        xml: 'author,omitempty'
    Comments:
      description: >
        is the url of the comments page for the item.
      x-go-type: 'types.StringData'
      x-oapi-codegen-extra-tags:
        xml: 'comments,omitempty'
    Enclosure:
      description: >
        describes a media object.
      type: object
      required:
        - url
        - length
        - type
      properties:
        url:
          description: >
            indicates where the enclosure is located.
          type: string
          x-go-name: URL
          xml:
            attribute: true
          x-oapi-codegen-extra-tags:
            xml: 'url,attr'
            validate: 'required,uri'
        length:
          description: >
            indicates how big the enclosure is in bytes.
          type: integer
          xml:
            attribute: true
          x-oapi-codegen-extra-tags:
            xml: 'length,attr'
            validate: 'number'
        type:
          description: >
            indicates the MIME type of the enclosure.
          type: string
          xml:
            attribute: true
          x-oapi-codegen-extra-tags:
            xml: 'type,attr'
            validate: 'required'
      x-oapi-codegen-extra-tags:
        xml: 'enclosure,omitempty'
      x-go-type-skip-optional-pointer: false
    GUID:
      description: >
        is a string that uniquely identifies an item.
      type: object
      required:
        - value
      properties:
        value:
          $ref: 'types.yaml#/components/schemas/CharData'
        isPermaLink:
          description: >
            If true the guid is assumed to be a URL. If its value is false, the guid may not be assumed to be a url, or
            a url to anything in particular.
          type: boolean
          default: true
          xml:
            attribute: true
          x-oapi-codegen-extra-tags:
            xml: 'isPermaLink,attr,omitempty'
      x-go-name: GUID
      x-oapi-codegen-extra-tags:
        xml: 'guid,omitempty'
    Source:
      description: >
        The RSS channel that the item came from.
      type: object
      required:
        - value
      properties:
        value:
          $ref: 'types.yaml#/components/schemas/CharData'
        url:
          $ref: 'types-attributes.yaml#/components/schemas/AttrURL'
      x-oapi-codegen-extra-tags:
        xml: 'source,omitempty'
    SkipHours:
      description: >
        is a hint for aggregators telling them which hours they can skip.
      type: object
      properties:
        hour:
          type: array
          items:
            description: >
              is the hour of the day to skip.
            type: integer
            minimum: 0
            maximum: 23
          x-oapi-codegen-extra-tags:
            xml: 'hour,omitempty'
            validate: 'omitempty,dive,gte=0,lte=23'
          x-go-type-skip-optional-pointer: true
      x-oapi-codegen-extra-tags:
        xml: 'skipHours,omitempty'
    SkipDays:
      description: >
        is a hint for aggregators telling them which days they can skip. This
      type: object
      properties:
        day:
          type: array
          items:
            description: >
              is a day of the week to skip.
            x-go-type: 'types.StringData'
            enum:
              [
                'Monday',
                'Tuesday',
                'Wednesday',
                'Thursday',
                'Friday',
                'Saturday',
                'Sunday',
              ]
            x-enum-varnames:
              [
                'SkipMonday',
                'SkipTuesday',
                'SkipWednesday',
                'SkipThursday',
                'SkipFriday',
                'SkipSaturday',
                'SkipSunday',
              ]
          x-oapi-codegen-extra-tags:
            xml: 'day,omitempty'
            validate: 'omitempty,dive,oneof=Monday Tuesday Wednesday Thursday Friday Saturday Sunday'
          # x-go-type-skip-optional-pointer: true
      x-oapi-codegen-extra-tags:
        xml: 'skipDays,omitempty'
    ChannelElements:
      description: >
        contains all Channel elements (i.e., Channel metadata).
      type: object
      required:
        - title
        - link
        - description
      properties:
        title:
          description: >
            is the name of the channel. It's how people refer to your service. If you have an HTML website that contains
            the same information as your RSS file, the title of your channel should be the same as the title of your
            website.
          x-go-type: 'types.StringData'
          x-oapi-codegen-extra-tags:
            xml: 'title'
            validate: 'required'
        link:
          description: >
            is the URL to the HTML website corresponding to the channel.
          type: string
          x-oapi-codegen-extra-tags:
            xml: 'link'
            validate: 'omitempty,url'
        description:
          description: >
            the description of the channel.
          x-go-type: 'types.StringData'
          x-oapi-codegen-extra-tags:
            xml: 'description'
            validate: 'omitempty,required'
        AtomLink:
          allOf:
            - $ref: 'atom.yaml#/components/schemas/Link'
          x-oapi-codegen-extra-tags:
            xml: 'http://www.w3.org/2005/Atom link,omitempty'
            json: 'atom_link'
            validate: omitempty
          x-go-type-skip-optional-pointer: true
        language:
          $ref: 'types-elements.yaml#/components/schemas/Language'
        copyright:
          description: >
            Copyright notice for content in the channel.
          allOf:
            - $ref: 'types.yaml#/components/schemas/CharData'
          x-oapi-codegen-extra-tags:
            xml: 'copyright,omitempty'
        managingEditor:
          description: >
            is the email address for person responsible for editorial content.
          allOf:
            - $ref: 'types.yaml#/components/schemas/CharData'
          x-oapi-codegen-extra-tags:
            xml: 'managingEditor,omitempty'
        webMaster:
          description: >
            is the email address for person responsible for technical issues relating to channel.
          allOf:
            - $ref: 'types.yaml#/components/schemas/CharData'
          x-oapi-codegen-extra-tags:
            xml: 'webMaster,omitempty'
        pubDate:
          $ref: '#/components/schemas/PubDate'
        lastBuildDate:
          $ref: '#/components/schemas/LastBuildDate'
        categories:
          description: >
            is a list of categories associated with the channel.
          type: array
          items:
            $ref: '#/components/schemas/Category'
          xml:
            name: category
          x-oapi-codegen-extra-tags:
            json: 'category,omitempty'
            xml: 'category,omitempty'
          x-go-type-skip-optional-pointer: true
        generator:
          description: >
            is a string indicating the program used to generate the channel.
          allOf:
            - $ref: 'types.yaml#/components/schemas/CharData'
          x-oapi-codegen-extra-tags:
            xml: 'generator,omitempty'
        docs:
          description: >
            A URL that points to the documentation for the format used in the RSS file. It's probably a pointer to this
            page. It's for people who might stumble across an RSS file on a Web server 25 years from now and wonder what
            it is.
          type: string
          x-oapi-codegen-extra-tags:
            xml: 'docs,omitempty'
            validate: 'omitempty,uri'
        cloud:
          $ref: '#/components/schemas/Cloud'
        ttl:
          $ref: '#/components/schemas/TTL'
        image:
          $ref: '#/components/schemas/Image'
        rating:
          $ref: '#/components/schemas/Rating'
        textInput:
          $ref: '#/components/schemas/TextInput'
        skipHours:
          $ref: '#/components/schemas/SkipHours'
        skipDays:
          $ref: '#/components/schemas/SkipDays'
    Channel:
      description: >
        is the element containing metadata (Channel elements) and items.
      allOf:
        - $ref: '#/components/schemas/ChannelElements'
        - $ref: 'rss-ext.yaml#/components/schemas/SyndicationElements'
        - $ref: 'dc.yaml#/components/schemas/DublinCoreElements'
        - $ref: 'media-rss.yaml#/components/schemas/MediaElements'
        - $ref: 'itunes.yaml#/components/schemas/ItunesElements'
        - $ref: 'googleplay.yaml#/components/schemas/GooglePlayElements'
        - type: object
          properties:
            items:
              description: >
                is a list of the current items published to the channel.
              type: array
              items:
                $ref: '#/components/schemas/Item'
              xml:
                name: item
              x-oapi-codegen-extra-tags:
                xml: 'item,omitempty'
                validate: 'omitempty,dive,validateFn'
              x-go-type-skip-optional-pointer: true
            MediaContent:
              $ref: 'media-rss.yaml#/components/schemas/MediaContent'
            MediaGroup:
              $ref: 'media-rss.yaml#/components/schemas/MediaGroup'
            # extensions:
            #   $ref: 'types.yaml#/components/schemas/Extensions'
      x-oapi-codegen-extra-tags:
        xml: 'channel'
        validate: 'required'
    ItemElements:
      description: >
        contains all Item elements.
      type: object
      required:
        - title
        - link
        - description
      properties:
        title:
          description: >
            is the title of the item.
          x-go-type: 'types.StringData'
          x-oapi-codegen-extra-tags:
            xml: 'title'
        link:
          description: >
            is the URL of the item.
          type: string
          x-oapi-codegen-extra-tags:
            xml: link
            validate: 'omitempty,url'
        description:
          description: >
            is the item synopsis.
          x-go-type: 'types.StringData'
          x-oapi-codegen-extra-tags:
            xml: description
        author:
          $ref: '#/components/schemas/Author'
        categories:
          description: >
            is a list of categories associated with the channel.
          type: array
          items:
            $ref: '#/components/schemas/Category'
          xml:
            name: category
          x-oapi-codegen-extra-tags:
            xml: 'category,omitempty'
          x-go-type-skip-optional-pointer: true
        comments:
          $ref: '#/components/schemas/Comments'
        enclosure:
          $ref: '#/components/schemas/Enclosure'
        guid:
          $ref: '#/components/schemas/GUID'
        pubDate:
          $ref: '#/components/schemas/PubDate'
        source:
          $ref: '#/components/schemas/Source'
        image:
          $ref: '#/components/schemas/Image'
    Item:
      description: >
        An item may represent a "story" -- much like a story in a newspaper or magazine; if so its description is a
        synopsis of the story, and the link points to the full story. An item may also be complete in itself, if so, the
        description contains the text (entity-encoded HTML is allowed; see examples), and the link and title may be
        omitted. All elements of an item are optional, however at least one of title or description must be present.
      allOf:
        - $ref: '#/components/schemas/ItemElements'
        - $ref: 'dc.yaml#/components/schemas/DublinCoreElements'
        - $ref: 'media-rss.yaml#/components/schemas/MediaElements'
        - type: object
          properties:
            ContentEncoded:
              $ref: 'rss-ext.yaml#/components/schemas/ContentEncoded'
            MediaContent:
              $ref: 'media-rss.yaml#/components/schemas/MediaContent'
            MediaGroup:
              $ref: 'media-rss.yaml#/components/schemas/MediaGroup'
            PermaLink:
              $ref: 'rss-ext.yaml#/components/schemas/PermaLink'
      x-oapi-codegen-extra-tags:
        xml: 'item,omitemtpy'
        validate: validateFn
    RSS:
      description: >
        represents an RSS document.
      type: object
      x-go-name: RSS
      required:
        - XMLName
        - version
        - channel
      properties:
        XMLName:
          $ref: 'types.yaml#/components/schemas/XMLName'
        channel:
          $ref: '#/components/schemas/Channel'
        version:
          description: >
            specifies the version of RSS that the document conforms to.
          type: string
          enum: ['0.91', '0.92', '2.0', '2.0.1']
          x-oapi-codegen-extra-tags:
            xml: 'version,attr'
            validate: 'required,oneof=0.91 0.92 2.0 2.0.1'
          xml:
            attribute: true
        attributes:
          description: >
            contains any additional attributes (including namespaces).
          type: array
          items:
            x-go-type: xml.Attr
          x-oapi-codegen-extra-tags:
            xml: ',any,attr'
            json: 'attributes'
          x-go-type-skip-optional-pointer: true
      x-oapi-codegen-extra-tags:
        xml: 'rss'
