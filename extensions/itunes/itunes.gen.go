// Package itunes provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package itunes

import (
	externalRef0 "github.com/immanent-tech/go-syndication/types"
)

// Defines values for Type.
const (
	Episodic Type = "Episodic"
	Serial   Type = "Serial"
)

// Author is the author of the show content.
type Author = string

// Categories defines model for Categories.
type Categories struct {
	Categories []Category `json:"itunes_category" xml:"http://www.itunes.com/dtds/podcast-1.0.dtd category,omitempty"`

	// Text is the text that describes the category.
	Text string `json:"text" xml:"text,attr"`
}

// Category is a taxonomy that represents the show.
type Category struct {
	// Text is the text that describes the category.
	Text string `json:"text" xml:"text,attr"`
}

// Explicit indicates whether the content is explicit in nature.
type Explicit = bool

// Image is the artwork for the show.
type Image struct {
	// Href is a URL that represents the element content.
	Href externalRef0.AttrHref `json:"href" validate:"omitempty,url" xml:"href,attr,omitempty"`
}

// ItunesElements is the list itunes elements.
type ItunesElements struct {
	// ItunesAuthor is the author of the show content.
	ItunesAuthor Author `json:"itunes_author" xml:"http://www.itunes.com/dtds/podcast-1.0.dtd author,omitempty"`

	// ItunesCategory is the set of all taxonomies that represent the show.
	ItunesCategory Categories `json:"itunes_category" xml:"http://www.itunes.com/dtds/podcast-1.0.dtd category,omitempty"`

	// ItunesExplicit indicates whether the content is explicit in nature.
	ItunesExplicit Explicit `json:"itunes_explicit" xml:"http://www.itunes.com/dtds/podcast-1.0.dtd explicit,omitempty"`

	// ItunesImage is the artwork for the show.
	ItunesImage Image `json:"itunes_image" xml:"http://www.itunes.com/dtds/podcast-1.0.dtd image,omitempty"`
	ItunesOwner Owner `json:"itunes_owner" xml:"http://www.itunes.com/dtds/podcast-1.0.dtd owner,omitempty"`

	// ItunesSubtitle is a subtitle for the show content.
	ItunesSubtitle Subtitle `json:"itunes_subtitle" xml:"http://www.itunes.com/dtds/podcast-1.0.dtd subtitle,omitempty"`

	// ItunesSummary is a summary of the show content.
	ItunesSummary Summary `json:"itunes_summary" xml:"http://www.itunes.com/dtds/podcast-1.0.dtd summary,omitempty"`

	// ItunesType is the type of show
	ItunesType Type `json:"itunes_type" xml:"http://www.itunes.com/dtds/podcast-1.0.dtd type,omitempty"`
}

// Name defines model for Name.
type Name = string

// Owner defines model for Owner.
type Owner struct {
	Name Name `json:"itunes_name" xml:"http://www.itunes.com/dtds/podcast-1.0.dtd name,omitempty"`
}

// Subtitle is a subtitle for the show content.
type Subtitle = string

// Summary is a summary of the show content.
type Summary = string

// Type is the type of show
type Type string
