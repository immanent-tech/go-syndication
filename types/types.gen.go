// Package types provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package types

import (
	"encoding/xml"
)

// Defines values for NameSpace.
const (
	NameSpaceAtom        NameSpace = "http://www.w3.org/2005/Atom"
	NameSpaceContent     NameSpace = "http://purl.org/rss/1.0/modules/content/"
	NameSpaceDublinCore  NameSpace = "http://purl.org/dc/elements/1.1/"
	NameSpaceMediaRSS    NameSpace = "http://search.yahoo.com/mrss/"
	NameSpaceSyndication NameSpace = "http://purl.org/rss/1.0/modules/syndication/"
)

// Attributes are any attributes of the element.
type Attributes = []xml.Attr

// Content defines model for Content.
type Content = CustomTypeBase

// CustomTypeBase defines model for CustomTypeBase.
type CustomTypeBase struct {
	// Attributes are any attributes of the element.
	Attributes Attributes `json:"attributes" xml:",any,attr"`

	// Value is an element value that is required.
	Value RequiredValue `json:"value" validate:"required" xml:",chardata"`
}

// Extension represents an element that is not defined in the schema.
type Extension struct {
	// XMLName represents the XML namespace of an element.
	XMLName XMLName `json:"xml" validate:"required"`

	// Attributes are any attributes of the element.
	Attributes Attributes  `json:"attributes" xml:",any,attr"`
	Extensions []Extension `json:"extensions,omitempty" xml:",any"`

	// Value is an element value that is optional.
	Value *OptionalValue `json:"value,omitempty" xml:",chardata"`
}

// Extensions records any elements that are unknown extensions to the schema.
type Extensions = []Extension

// Image defines model for Image.
type Image struct {
	// Attributes are any attributes of the element.
	Attributes Attributes `json:"attributes" xml:",any,attr"`

	// Title the description or alt tag of the image
	Title *string `json:"title,omitempty"`

	// Value is an element value that is required.
	Value RequiredValue `json:"value" validate:"required" xml:",chardata"`
}

// NameSpace maps namespace URL identifiers to a easy-to-use string type.
type NameSpace string

// OptionalValue is an element value that is optional.
type OptionalValue = string

// RequiredValue is an element value that is required.
type RequiredValue = string

// XMLName represents the XML namespace of an element.
type XMLName = xml.Name
